# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VxWWET1POpwwy94qZcRIBPn4exB9DA4M
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import datetime
import numpy as np
from datetime import timedelta

# Load your COVID-19 dataset
df = pd.read_csv("/content/covid_19_clean_complete _4_.csv")

# Ensure the "Date" column is in datetime format
df['Date'] = pd.to_datetime(df['Date'])

df

# Filter the data for a specific country or region if needed
# data = data[data['Country/Region'] == 'Your Country/Region']

# Data visualization
plt.figure(figsize=(12, 6))
plt.plot(df['Date'], df['Confirmed'], label='Confirmed Cases', color='blue')
plt.plot(df['Date'], df['Recovered'], label='Recovered Cases', color='green')
plt.xlabel('Date')
plt.ylabel('Number of Cases')
plt.title('COVID-19 Cases Over Time')
plt.legend()
plt.grid(True)
plt.show()

# Trend analysis
df['InfectionRate'] = df['Confirmed'].diff()
df['RecoveryRate'] = df['Recovered'].diff()

# Prediction
X = df['Date'].dt.dayofyear.values.reshape(-1, 1)
y = df['Confirmed']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions for future dates (e.g., 7 days ahead)
future_dates = [df['Date'].max() + timedelta(days=i) for i in range(1, 8)]
future_X = future_dates[0].dayofyear + np.arange(7).reshape(-1, 1)
predicted_cases = model.predict(future_X)

# Print the predicted cases for the next week
for date, cases in zip(future_dates, predicted_cases):
    print(f'Prediction for {date.strftime("%Y-%m-%d")}: {int(cases)} cases')